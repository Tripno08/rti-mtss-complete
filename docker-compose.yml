services:
  # Serviço MySQL
  mysql:
    container_name: rti_mtss_mysql
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rti_mtss_db
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - rti_mtss_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço Redis
  redis:
    image: redis:7-alpine
    container_name: rti_mtss_redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - rti_mtss_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço Backend
  backend:
    container_name: rti_mtss_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "127.0.0.1:3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://root:root@mysql:3306/rti_mtss_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}
      PORT: 3001
    networks:
      - rti_mtss_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Serviço Frontend
  frontend:
    container_name: rti_mtss_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://backend:3001/api
    networks:
      - rti_mtss_network
    depends_on:
      - backend

volumes:
  mysql_data:
    name: rti_mtss_mysql_data

networks:
  rti_mtss_network:
    name: rti_mtss_network
    driver: bridge 